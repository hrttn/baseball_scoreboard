// Generated by CoffeeScript 1.12.6
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  jQuery(function() {
    $('#scoreboard').on('change', '.score-player', function() {
      var i, playerNumber, round, roundName, score, scoreRound;
      playerNumber = this.name.slice(-1);
      score = 0;
      for (round = i = 1; i <= 9; round = ++i) {
        roundName = 'score' + round + '-player' + playerNumber;
        scoreRound = Number($('input[name="' + roundName + '"]').val());
        if (isNaN(scoreRound)) {
          scoreRound = 0;
        }
        score += scoreRound;
      }
      return $('#total-player' + playerNumber).text(score);
    });
    $('#add-player').click(function() {
      var i, j, newPlayerNumber, playersNumber, roundNumber;
      roundNumber = 1;
      playersNumber = [];
      $('#scoreboard thead .name-player').each(function() {
        return playersNumber.push(Number($(this).parent().attr('class').slice(-1)));
      });
      playersNumber.sort;
      console.log(playersNumber);
      assigningNewPlayerNumber: //;
      for (j = i = 1; i <= 8; j = ++i) {
        if (indexOf.call(playersNumber, j) < 0) {
          newPlayerNumber = j;
          break assigningNewPlayerNumber;
        }
      }
      if (newPlayerNumber < 9) {
        $('#scoreboard thead tr').append('<th class="player' + newPlayerNumber + '"><input size="6" type="text" name="name-player' + newPlayerNumber + '" class="name-player" value="Player ' + newPlayerNumber + '" placeholder="Player ' + newPlayerNumber + '\'s name" /><button type="button" class="btn btn-danger delete-player">‚ùå</button></th>');
        $('#scoreboard tfoot tr').append('<td id="total-player' + newPlayerNumber + '" class="player' + newPlayerNumber + '">0</td>');
        return $('#scoreboard tbody tr').each(function() {
          $(this).append('<td class="player' + newPlayerNumber + '"><input type="number" name="score' + roundNumber + '-player' + newPlayerNumber + '"  class="score-player"  min="0" max="42"/></td>');
          return roundNumber++;
        });
      } else {
        return console.log("Maximum number of players reached.");
      }
    });
    return $('#scoreboard').on('click', '.delete-player', function() {
      var parentClass, playerNumber, playerNumberClass;
      parentClass = $(this).parent().attr('class');
      playerNumber = parentClass.slice(-1, parentClass.length);
      playerNumberClass = ".player" + playerNumber;
      return $(playerNumberClass).remove();
    });
  });

}).call(this);
